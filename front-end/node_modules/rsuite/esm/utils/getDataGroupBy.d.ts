export declare const KEY_GROUP: string | symbol;
export declare const KEY_GROUP_TITLE = "groupTitle";
/**
 * Chunk data into groups
 * @returns [group, child, child, group, child, child]
 */
export declare function getDataGroupBy<T>(data: readonly T[], key: string, sort?: (isGroup: boolean) => <T>(a: T, b: T) => number): (T | {
    groupTitle: string;
    children: T[];
})[];
/**
 * Chunk options into groups
 * @returns [
 *   group {
 *     key
 *     options
 *   }
 *   group {
 *     key
 *     options
 *   }
 * ]
 */
export declare type Group<T> = {
    key: string;
    options: T[];
};
export declare type CompareFn<T> = (a: T, b: T) => number;
export declare function groupOptions<T>(options: readonly T[], groupKey: string, compareOptions?: CompareFn<T>, compareGroups?: CompareFn<Group<T>>): Group<T>[];
