import React from 'react';
import { ListProps, ListHandle } from '../Windowing';
import { CompareFn, Group } from '../utils/getDataGroupBy';
import { StandardProps } from '../@types/common';
interface ListboxProps<T, K> extends StandardProps, Omit<React.HTMLAttributes<HTMLDivElement>, 'onSelect'> {
    classPrefix: string;
    options: readonly T[];
    getOptionKey?: (option: T) => K;
    sort?: <B extends boolean>(isGroup: B) => B extends true ? CompareFn<Group<T>> : CompareFn<T>;
    groupBy?: string;
    disabledOptionKeys?: readonly K[];
    selectedOptionKey?: K;
    activeOptionKey?: K;
    maxHeight?: number;
    labelKey?: string;
    className?: string;
    style?: React.CSSProperties;
    optionClassPrefix?: string;
    rowHeight?: number;
    rowGroupHeight?: number;
    virtualized?: boolean;
    listProps?: Partial<ListProps>;
    listRef?: React.Ref<ListHandle>;
    /** Custom selected option */
    renderMenuItem?: (itemLabel: React.ReactNode, item: any) => React.ReactNode;
    renderMenuGroup?: (title: React.ReactNode, item: any) => React.ReactNode;
    onSelect?: (value: K, item: T, event: React.MouseEvent) => void;
    onGroupTitleClick?: (event: React.MouseEvent) => void;
}
declare type ListboxComponent = <T, K>(p: ListboxProps<T, K> & {
    ref?: React.ForwardedRef<HTMLDivElement>;
}) => JSX.Element;
declare const Listbox: ListboxComponent;
export default Listbox;
